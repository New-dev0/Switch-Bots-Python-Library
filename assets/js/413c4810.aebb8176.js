"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[584],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,y=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(y,l(l({ref:t},s),{},{components:n})):a.createElement(y,l({ref:t},s))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6852:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1},l="Deploy on Ubuntu/Debian",i={unversionedId:"deploy/ubuntu",id:"deploy/ubuntu",title:"Deploy on Ubuntu/Debian",description:"After you have created your bot, you should deply it on a server (you can also run it locally, but that would require you to have your pc always on).",source:"@site/docs/deploy/ubuntu.md",sourceDirName:"deploy",slug:"/deploy/ubuntu",permalink:"/Switch-Bots-Python-Library/docs/deploy/ubuntu",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Deploy",permalink:"/Switch-Bots-Python-Library/docs/category/deploy"}},p={},u=[{value:"Install Python 3.10 (if not available in the default repositories)",id:"install-python-310-if-not-available-in-the-default-repositories",level:2},{value:"Install dependencies",id:"install-dependencies",level:2},{value:"Run the bot",id:"run-the-bot",level:2},{value:"Run the bot on startup",id:"run-the-bot-on-startup",level:2},{value:"Using systemd",id:"using-systemd",level:3}],s={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deploy-on-ubuntudebian"},"Deploy on Ubuntu/Debian"),(0,r.kt)("p",null,"After you have created your bot, you should deply it on a server (you can also run it locally, but that would require you to have your pc always on)."),(0,r.kt)("p",null,"To deploy your bot on Ubuntu/Debian, please make sure you have installed the following dependencies:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"python")," 3.10 or higher (you can check your Python version by running ",(0,r.kt)("inlineCode",{parentName:"li"},"python3 --version"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pip")," (you can check your ",(0,r.kt)("inlineCode",{parentName:"li"},"pip")," version by running ",(0,r.kt)("inlineCode",{parentName:"li"},"pip3 --version"),")")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Not required, but recommended:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"venv")," (you can check your ",(0,r.kt)("inlineCode",{parentName:"li"},"venv")," version by running ",(0,r.kt)("inlineCode",{parentName:"li"},"python3 -m venv --version"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git")," (you can check your ",(0,r.kt)("inlineCode",{parentName:"li"},"git")," version by running ",(0,r.kt)("inlineCode",{parentName:"li"},"git --version"),")")),(0,r.kt)("h2",{id:"install-python-310-if-not-available-in-the-default-repositories"},"Install Python 3.10 (if not available in the default repositories)"),(0,r.kt)("p",null,"Python 3.10 is not available in the default Ubuntu repositories. You can install it by following the steps below:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add the deadsnakes PPA:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo add-apt-repository ppa:deadsnakes/ppa\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Update the package list:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Install Python 3.10:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\nsudo apt install python3.10\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Install ",(0,r.kt)("inlineCode",{parentName:"li"},"pip")," for Python 3.10:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install python3.10-distutils\ncurl https://bootstrap.pypa.io/get-pip.py | sudo python3.10\n")),(0,r.kt)("h2",{id:"install-dependencies"},"Install dependencies"),(0,r.kt)("p",null,"To install the dependencies, run the following commands:"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"If you have a requirements.txt file:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip3 install -r requirements.txt\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"If you don't have a requirements.txt file:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip3 install swibots\n")),(0,r.kt)("p",null,"Install other dependencies if you need them."),(0,r.kt)("h2",{id:"run-the-bot"},"Run the bot"),(0,r.kt)("p",null,"To run the bot, run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"python3 <your bot file>.py\n")),(0,r.kt)("h2",{id:"run-the-bot-on-startup"},"Run the bot on startup"),(0,r.kt)("p",null,"To run the bot on startup, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"systemd")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"supervisor"),"."),(0,r.kt)("h3",{id:"using-systemd"},"Using systemd"),(0,r.kt)("p",null,"To run the bot on startup using ",(0,r.kt)("inlineCode",{parentName:"p"},"systemd"),", you can follow the steps below:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a service file for your bot. You can use the following template:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"[Unit]\nDescription=<your bot name>\nAfter=network.target\nStartLimitIntervalSec=0\n\n[Service]\nType=simple\nRestart=always\nRestartSec=1\nUser=<your user>\nExecStart=python3 /path/to/bot.py\n\n[Install]\nWantedBy=multi-user.target\n\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save the file as ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/systemd/system/<your bot name>.service"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Reload the systemd daemon:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl daemon-reload\n")),(0,r.kt)("h1",{id:"using-supervisor"},"Using supervisor"),(0,r.kt)("p",null,"To run the bot on startup using ",(0,r.kt)("inlineCode",{parentName:"p"},"supervisor"),", you can follow the steps below:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install ",(0,r.kt)("inlineCode",{parentName:"li"},"supervisor"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install supervisor\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Create a configuration file for your bot. You can use the following template:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"[program:<your bot name>]\ncommand=/home/user/your-user/venv/bin/python /path/to/bot.py\ndirectory=/path/to/bot/directory\nautostart=true\nautorestart=true\nstartsecs=10\nstderr_logfile=/var/log/<your bot name>.err.log\nstdout_logfile=/var/log/<your bot name>.out.log\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save the file as ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/supervisor/conf.d/<your bot name>.conf"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Reload the supervisor configuration:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo supervisorctl reread\nsudo supervisorctl update\n")))}d.isMDXComponent=!0}}]);