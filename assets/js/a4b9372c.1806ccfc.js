"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6883],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(n),h=a,m=u["".concat(s,".").concat(h)]||u[h]||c[h]||l;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},6142:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const l={},o="Types - Functions",i={unversionedId:"api_reference/types/functions",id:"api_reference/types/functions",title:"Types - Functions",description:"Swibots have a number of built-in functions that can be used in the code of your Swibot. These functions are available in the swibot module.",source:"@site/docs/api_reference/types/functions.md",sourceDirName:"api_reference/types",slug:"/api_reference/types/functions",permalink:"/Switch-Bots-Python-Library/docs/api_reference/types/functions",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Enums",permalink:"/Switch-Bots-Python-Library/docs/api_reference/types/enums"},next:{title:"Group",permalink:"/Switch-Bots-Python-Library/docs/api_reference/types/group"}},s={},p=[{value:"DownloadProgressCallback",id:"downloadprogresscallback",level:2},{value:"Signature",id:"signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"DownloadProgress",id:"downloadprogress",level:2},{value:"Properties",id:"properties",level:3},{value:"UploadProgressCallback",id:"uploadprogresscallback",level:2},{value:"Signature",id:"signature-1",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"UploadProgress",id:"uploadprogress",level:2},{value:"Properties",id:"properties-1",level:3},{value:"IOClient",id:"ioclient",level:2}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"types---functions"},"Types - Functions"),(0,a.kt)("p",null,"Swibots have a number of built-in functions that can be used in the code of your Swibot. These functions are available in the ",(0,a.kt)("inlineCode",{parentName:"p"},"swibot")," module."),(0,a.kt)("h2",{id:"downloadprogresscallback"},"DownloadProgressCallback"),(0,a.kt)("p",null,"A callback function that is called when the download progress changes."),(0,a.kt)("h3",{id:"signature"},"Signature"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"DownloadProgressCallback = Callable[[DownloadProgress], Coroutine[Any, Any, None]]")),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"progress")," (",(0,a.kt)("a",{parentName:"li",href:"#downloadprogress"},"DownloadProgress"),"): The download progress")),(0,a.kt)("h2",{id:"downloadprogress"},"DownloadProgress"),(0,a.kt)("p",null,"The download progress."),(0,a.kt)("h3",{id:"properties"},"Properties"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"downloaded")," (int): The number of bytes that have been downloaded"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"total")," (int): The total number of bytes to download"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"url")," (str): The URL of the file being downloaded"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"client")," (",(0,a.kt)("a",{parentName:"li",href:"#ioclient"},"IOClient"),"): The client that is downloading the file"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"file_name")," (str): The file name of the file being downloaded"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"stared")," (bool): Whether the download has started")),(0,a.kt)("h2",{id:"uploadprogresscallback"},"UploadProgressCallback"),(0,a.kt)("p",null,"A callback function that is called when the upload progress changes."),(0,a.kt)("h3",{id:"signature-1"},"Signature"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"UploadProgressCallback = Callable[[UploadProgress], Coroutine[Any, Any, None]]")),(0,a.kt)("h3",{id:"parameters-1"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"progress")," (",(0,a.kt)("a",{parentName:"li",href:"#uploadprogress"},"UploadProgress"),"): The upload progress")),(0,a.kt)("h2",{id:"uploadprogress"},"UploadProgress"),(0,a.kt)("p",null,"The upload progress."),(0,a.kt)("h3",{id:"properties-1"},"Properties"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"current")," (int): The current chunk size (in bytes) being uploaded"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"readed")," (int): The number of bytes that have been uploaded"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"url")," (str): The URL of the file being uploaded"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"client")," (",(0,a.kt)("a",{parentName:"li",href:"#ioclient"},"IOClient"),"): The client that is uploading the file"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"file_name")," (str): The file name of the file being uploaded"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"started")," (bool): Whether the upload has started"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"callback")," (",(0,a.kt)("a",{parentName:"li",href:"#uploadprogresscallback"},"UploadProgressCallback"),"): The callback function that is called when the upload progress changes"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"callback_args")," (tuple): Additional arguments to pass to the ",(0,a.kt)("inlineCode",{parentName:"li"},"callback")," callback function")),(0,a.kt)("h2",{id:"ioclient"},"IOClient"),(0,a.kt)("p",null,"The client that is used to download files. This is a class with just one metod ",(0,a.kt)("inlineCode",{parentName:"p"},"cancel()"),", which can be used to cancel the download / upload."),(0,a.kt)("p",null,"It is used as a property of the ",(0,a.kt)("a",{parentName:"p",href:"#downloadprogress"},"DownloadProgress")," and ",(0,a.kt)("a",{parentName:"p",href:"#uploadprogress"},"UploadProgress")," objects."))}u.isMDXComponent=!0}}]);